@page "/"
@rendermode InteractiveServer
@inject UsuarioLoginUseCase UsuarioLoginUseCase
@inject NavigationManager NavigationManager
@inject Sesion Sesion


<PageTitle>Iniciar Sesión</PageTitle>

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-4">
            <h3 class="text-center mb-4">Iniciar Sesión</h3>

            <div class="card p-4 shadow">
                <div class="form-group">
                    @if (!string.IsNullOrEmpty(_error))
                    {
                        <div class="alert alert-danger">@_error</div>
                    }
                    
                    @if (!string.IsNullOrEmpty(_exito))
                    {
                        <div class="alert alert-success">@_exito</div>
                    }
                    
                    <label for="email">Usuario</label>
                    <input @bind="_email" class="form-control" id="email" placeholder="Ingrese su email" />
                </div>

                <div class="form-group mt-3">
                    <label for="password">Contraseña</label>
                    <input @bind="_password" type="password" class="form-control" id="password" placeholder="Ingrese su contraseña" />
                </div>

                <div class="mt-4">
                    <button class="btn btn-primary w-100" @onclick="IniciarSesion" disabled="@_cargando">
                        @if (_cargando)
                        {
                            <span class="spinner-border spinner-border-sm me-2"></span>
                        }
                        Ingresar
                    </button>
                </div>

                <div class="mt-2 text-center">
                    <a href="/crearusuario">Crear usuario</a>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string _email = "";
    private string _password = "";
    private string _exito = "";
    private string _error = "";
    private bool _cargando = false;

    private async Task IniciarSesion()
    {
        _error = "";
        _exito = "";
        _cargando = true;

        try
        {
            var resultado = UsuarioLoginUseCase.Ejecutar(_email, _password);
            
            if (resultado.Exitoso)
            {
                _exito = "¡Sesión iniciada correctamente!";
                Sesion.Iniciar(resultado.Usuario!);
                
  
                StateHasChanged();
                await Task.Delay(1000);
                
                NavigationManager.NavigateTo("/home", forceLoad: true);
            }
            else
            {
                Console.WriteLine("Error al iniciar sesión: " + resultado.Error);
                _error = resultado.Error ?? "Error desconocido al iniciar sesión";
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Excepción en login: " + ex.Message);
            _error = "Error interno del sistema. Intente nuevamente.";
        }
        finally
        {
            _cargando = false;
        }
    }

    protected override void OnInitialized()
    {
        // Si ya hay una sesión iniciada, redirigir al home
        if (Sesion.EstaLogueado())
        {
            NavigationManager.NavigateTo("/home");
        }
    }
}